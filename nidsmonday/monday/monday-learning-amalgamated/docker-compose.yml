version: '3.8'

services:
  # Redis for session state and caching
  redis:
    image: redis:7.2-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - monday-network

  # PostgreSQL for analytics and user progress tracking
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: monday_learning
      POSTGRES_USER: monday_user
      POSTGRES_PASSWORD: monday_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - monday-network

  # Neo4j for knowledge graph management
  neo4j:
    image: neo4j:5.14-community
    environment:
      NEO4J_AUTH: neo4j/monday_neo4j_password
      NEO4J_PLUGINS: '["apoc"]'
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
    networks:
      - monday-network

  # Backend Node.js service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      PORT: 3001
      REDIS_URL: redis://redis:6379
      DATABASE_URL: postgresql://monday_user:monday_password@postgres:5432/monday_learning
      NEO4J_URI: bolt://neo4j:7687
      NEO4J_USER: neo4j
      NEO4J_PASSWORD: monday_neo4j_password
      PERPLEXITY_API_KEY: ${PERPLEXITY_API_KEY}
      ELEVENLABS_API_KEY: ${ELEVENLABS_API_KEY}
    depends_on:
      - redis
      - postgres
      - neo4j
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - monday-network

  # Python microservices
  python-services:
    build:
      context: ./python-services
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      REDIS_URL: redis://redis:6379
      DATABASE_URL: postgresql://monday_user:monday_password@postgres:5432/monday_learning
      NEO4J_URI: bolt://neo4j:7687
      NEO4J_USER: neo4j
      NEO4J_PASSWORD: monday_neo4j_password
    depends_on:
      - redis
      - postgres
      - neo4j
    volumes:
      - ./python-services:/app
    networks:
      - monday-network

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./frontend/dist:/usr/share/nginx/html
    depends_on:
      - backend
    networks:
      - monday-network

volumes:
  redis_data:
  postgres_data:
  neo4j_data:

networks:
  monday-network:
    driver: bridge 